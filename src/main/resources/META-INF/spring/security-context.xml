<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd"
             profile="secured">
    
    <beans:bean id="ajaxTimeoutRedirectFilter" class="com.posabro.web.commons.AjaxTimeoutRedirectFilter">
    </beans:bean>
    
    <http auto-config="true" use-expressions="true" access-denied-page="/accessDenied.jsp">
        <remember-me key="cosysRememberorb:friTh?56paEan10ORs:"/>
        <form-login login-page="/login" default-target-url="/" 
                    authentication-failure-url="/login?error=true" />
        <custom-filter ref="ajaxTimeoutRedirectFilter" after="EXCEPTION_TRANSLATION_FILTER" />
        <!--<intercept-url pattern="/" access="hasAnyRole('ROLE_GUEST','ROLE_ADMIN')" />-->
        <intercept-url pattern="/" access="isAuthenticated()" />
        <intercept-url pattern="/register" access="not isAuthenticated()" />
        <intercept-url pattern="/generateTempPassword" access="not isAuthenticated()" />
        <intercept-url pattern="/generateNewPassword" access="not isAuthenticated()" />
        <intercept-url pattern="/users*" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/roles*" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/groups*" access="hasRole('ROLE_ADMIN')" />
    </http>
    
    <authentication-manager>
        <authentication-provider>
            <password-encoder hash="md5" />
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="SELECT name as username, password as password, case when status='ENABLED' then 'true' else 'false' end as enabled FROM WEB_USER where name = ?"
                               authorities-by-username-query="select * from (SELECT WEB_USER_name as username, roles_name as authorities FROM WEB_USER_WEB_ROLE union distinct
                                        select members_name as username, roles_name as authorities FROM web_group g, web_group_web_role r, web_group_web_user u
                                        where g.id = r.WEB_GROUP_id and g.id = u.WEB_GROUP_id) things where things.username = ?" />
        </authentication-provider>
    </authentication-manager>
    
</beans:beans>